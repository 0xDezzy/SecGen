# -*- mode: ruby -*-
# vi: set ft=ruby :

# This file was generated by SecGen
# <%= @time %>
# Based on <%= @scenario %>
<% require 'json'
   require 'base64' -%>

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
<% @systems.each do |system| %>
  config.vm.define "<%= system.name %>" do |<%= system.name %>|
    config.vm.provider :virtualbox do |vb|
<%= if (@options.has_key? :gui_output)
"      vb.gui = true
"
    else
"      vb.gui = false
"
    end -%>
<%= if (@options.has_key? :nopae)
"      vb.customize ['modifyvm', :id, '--pae', 'off']"
    else
"      vb.customize ['modifyvm', :id, '--pae', 'on']"
    end -%>

vb.customize ['modifyvm', :id, '--hwvirtex', 'on']


<%= if (@options.has_key? :vtxvpid)
"      vb.customize ['modifyvm', :id, '--vtxvpid', 'on']"
    else
"      vb.customize ['modifyvm', :id, '--vtxvpid', 'off']"
    end %>
<%= if (@options.has_key? :memory_per_vm)
"      vb.memory = #{@options[:memory_per_vm]}"
    elsif (@options.has_key? :total_memory)
"      vb.memory = #{@options[:total_memory]}/#{@systems.length}"
    end %>
<%= if (@options.has_key? :max_cpu_cores)
"      vb.cpus = #{@options[:max_cpu_cores]}"
    end %>
<%= if (@options.has_key? :max_cpu_usage)
"      vb.customize ['modifyvm', :id, '--cpuexecutioncap', '#{@options[:max_cpu_usage]}']"
    end %>
    end

    # SecGen datastore
    # <%= JSON.generate($datastore) %>

    # SecGen modules
<% system.module_selections.each do |selected_module| -%>

<%= selected_module.to_s_comment -%>
<%   case selected_module.module_type
     when 'base' -%>
    <%= system.name %>.vm.box = "<%= selected_module.module_path_name %>"
    <%= system.name %>.vm.box_url = "<%= selected_module.attributes['url'].first %>"

    <% if (selected_module.attributes['platform'].first.downcase == 'windows') %>
    config.vm.communicator = 'winrm'
    config.vm.guest = :windows
    # config.vm.network :forwarded_port, guest: 3389, host: 3389
    config.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true
    <% end %>

        <%   when 'network' -%>
<%     if selected_module.attributes['range'].first.nil? || selected_module.attributes['range'].first == "dhcp" -%>
    <%= system.name %>.vm.network :<%= selected_module.attributes['type'].first %>, type: "dhcp"
<%     else -%>
    <%= system.name %>.vm.network :<%= selected_module.attributes['type'].first %>, ip: "<%= resolve_network(selected_module.attributes['range'].first)%>"
<%     end -%>
<%   when 'vulnerability', 'service', 'utility', 'build', 'forensic' -%>
<%     module_name = selected_module.module_path_name -%>
    <%= system.name %>.vm.provision "puppet" do | <%=module_name%> |
<%     # if there are facter variables to define
      if selected_module.received_inputs != {} -%>
      <% json_inputs = JSON.generate(selected_module.received_inputs) -%>
      <%=module_name%>.facter = {
        "base64_inputs" => '<%= Base64.strict_encode64(json_inputs)%>'
      }
<%    end -%>
      <%=module_name%>.module_path = "<%="puppet/#{system.name}/modules"%>"
      <%=module_name%>.environment_path = "environments/"
      <%=module_name%>.environment = "production"
      <% if (selected_module.attributes['platform'].first.downcase == 'windows') -%>
      #<%=module_name%>.synced_folder_type = "smb"
      <% else -%>
      <%=module_name%>.synced_folder_type = "rsync"
      <% end -%>
      <%=module_name%>.manifests_path = "<%="puppet/#{system.name}/modules/#{selected_module.module_path_end}"%>"
      <%=module_name%>.manifest_file = "<%="#{selected_module.module_path_end}.pp"%>"
      #<%=module_name%>.options = "--verbose --debug"
    end
<%   end -%>
<% end -%>

  end
<% end %>
end
