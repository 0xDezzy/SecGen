<?xml version="1.0"?>

<scenario xmlns="http://www.github/cliffe/SecGen/scenario"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.github/cliffe/SecGen/scenario">

  <!-- an example remote storage system, with a remotely exploitable vulnerability that can then be escalated to root -->
  <system>
    <system_name>test</system_name>
    <base distro="Debian 9" type="desktop"/>

    <input into="test">
      <encoder module_path=".*simple_ssh.*" type="asymmetric_cipher" difficulty="low">
        <input into="strings_to_encode">
          <generator type="flag_generator"/>
        </input>
        <input into="subdirectory">
          <value>challenges/challenge_03</value>
        </input>
      </encoder>
    </input>

    <!---->
    <!--<input into_datastore="rsa_test">-->
    <!--<generator module_path=".*rsa_challenge">-->
    <!--<input into="strings_to_encode" into_datastore="rsa_flag">-->
    <!--<generator type="number_generator">-->
    <!--<input into="minimum">-->
    <!--<value>1000000000000000000</value>-->
    <!--</input>-->
    <!--<input into="maximum">-->
    <!--<value>9999999999999999999</value>-->
    <!--</input>-->
    <!--</generator>-->
    <!--</input>-->
    <!--</generator>-->
    <!--</input>-->

    <!--<input into_datastore="wrapped_rsa_flag">-->
    <!--<generator type="concat_flag.*">-->
    <!--<input into="strings_to_join">-->
    <!--<datastore access="0">rsa_flag</datastore>-->
    <!--</input>-->
    <!--</generator>-->
    <!--</input>-->

  </system>

</scenario>
