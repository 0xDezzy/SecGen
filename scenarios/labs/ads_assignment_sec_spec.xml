<?xml version="1.0"?>

<scenario xmlns="http://www.github/cliffe/SecGen/scenario"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.github/cliffe/SecGen/scenario">

	<name>ADS Assignment with Security Spec</name>
  <author>Z. Cliffe Schreuders</author>
  <description>Your task is to design and implement technical security defenses, to achieve the required functionality as specified below in the included requirements specification.</description>

  <type>hackerbot-lab</type>
  <type>lab-sheet</type>
  <difficulty>intermediate</difficulty>

	<system>
		<system_name>developer_desktop</system_name>
		<base distro="Debian 9" type="desktop" name="KDE"/>

		<input into_datastore="IP_addresses">
			<!-- 0 desktop -->
			<value>172.16.0.2</value>
			<!-- 1 server -->
			<value>172.16.0.3</value>
			<!-- 2 hackerbot_server -->
			<value>172.16.0.4</value>
		</input>

		<!-- accounts on the desktop, with the main user as a sudoer -->
		<input into_datastore="user_accounts">
			<!-- main user, sudoer -->
			<generator type="account">
				<input into="username">
					<generator type="random_word_generator">
						<input into="wordlist">
							<value>mythical_creatures</value>
						</input>
					</generator>
				</input>
				<input into="password">
					<value>tiaspbiqe2r</value>
				</input>
				<input into="super_user">
					<value>true</value>
				</input>
			</generator>
		</input>

		<input into_datastore="desktop_root_password">
			<generator type="strong_password_generator"/>
		</input>

		<!--Create the users-->
		<utility module_path=".*parameterised_accounts">
			<input into="accounts">
				<datastore>user_accounts</datastore>
			</input>
		</utility>

		<utility module_path=".*kde_minimal">
			<input into="autologin_user">
				<datastore access="0" access_json="['username']">accounts</datastore>
			</input>
			<input into="accounts">
				<datastore>user_accounts_desktop</datastore>
			</input>
			<input into="autostart_konsole">
				<value>true</value>
			</input>
		</utility>
		<utility module_path=".*handy_cli_tools"/>
		<utility module_path=".*hash_tools"/>
		<utility module_path=".*pam_modules"/>

		<utility module_path=".*iceweasel">
			<input into="accounts">
				<datastore>user_accounts_desktop</datastore>
			</input>
			<input into="autostart">
				<value>true</value>
			</input>
			<input into="start_page">
				<datastore access="2">IP_addresses</datastore>
			</input>
		</utility>

		<utility module_path=".*pidgin">
			<input into="server_ip">
				<datastore access="2">IP_addresses</datastore>
			</input>
			<input into="accounts">
				<datastore access="0">user_accounts_desktop</datastore>
			</input>
		</utility>

		<vulnerability module_path=".*ssh_root_login">
			<input into="root_password">
				<datastore>desktop_root_password</datastore>
			</input>
		</vulnerability>

		<network type="private_network">
			<input into="IP_address">
				<datastore access="0">IP_addresses</datastore>
			</input>
		</network>
	</system>


	<system>
		<system_name>staff_desktop</system_name>
		<base distro="Debian 9" type="desktop" name="KDE"/>

		<!--Create the users-->
		<utility module_path=".*parameterised_accounts">
			<input into="accounts">
				<datastore>user_accounts</datastore>
			</input>
		</utility>

		<utility module_path=".*kde_minimal">
			<input into="autologin_user">
				<datastore access="0" access_json="['username']">accounts</datastore>
			</input>
			<input into="accounts">
				<datastore>user_accounts_desktop</datastore>
			</input>
			<input into="autostart_konsole">
				<value>true</value>
			</input>
		</utility>
		<utility module_path=".*handy_cli_tools"/>
		<utility module_path=".*hash_tools"/>
		<utility module_path=".*pam_modules"/>

		<utility module_path=".*iceweasel">
			<input into="accounts">
				<datastore>user_accounts_desktop</datastore>
			</input>
			<input into="autostart">
				<value>true</value>
			</input>
			<input into="start_page">
				<datastore access="2">IP_addresses</datastore>
			</input>
		</utility>

		<utility module_path=".*pidgin">
			<input into="server_ip">
				<datastore access="2">IP_addresses</datastore>
			</input>
			<input into="accounts">
				<datastore access="0">user_accounts_desktop</datastore>
			</input>
		</utility>

		<vulnerability module_path=".*ssh_root_login">
			<input into="root_password">
				<datastore>desktop_root_password</datastore>
			</input>
		</vulnerability>

		<network type="private_network">
			<input into="IP_address">
				<datastore access="3">IP_addresses</datastore>
			</input>
		</network>
	</system>

	<system>
		<system_name>server</system_name>
		<base distro="Debian 9" type="server"/>

		<!--Create the users-->
		<utility module_path=".*parameterised_accounts">
			<input into="accounts">
				<datastore>user_accounts</datastore>
			</input>
		</utility>

		<utility module_path=".*handy_cli_tools"/>

		<vulnerability type="ftp"/>
		<vulnerability type="smb"/>


		<vulnerability module_path=".*ssh_root_login">
			<input into="root_password">
				<datastore>desktop_root_password</datastore>
			</input>
		</vulnerability>

		<network type="private_network">
			<input into="IP_address">
				<datastore access="1">IP_addresses</datastore>
			</input>
		</network>
	</system>

	<system>
		<system_name>hackerbot_server</system_name>
		<base distro="Kali" name="MSF"/>

		<service type="ircd"/>

		<utility module_path=".*metasploit_framework"/>
		<utility module_path=".*nmap"/>
		<utility module_path=".*handy_cli_tools"/>

		<service type="httpd"/>

		<utility module_path=".*hackerbot">
			<input into="hackerbot_configs">
				<generator module_path=".*hb_assignment_spec">
					<input into="accounts">
						<datastore>user_accounts</datastore>
					</input>
					<input into="root_password">
						<datastore>desktop_root_password</datastore>
					</input>
					<input into="server_ip">
						<datastore access="1">IP_addresses</datastore>
					</input>
				</generator>
			</input>
		</utility>

    <network type="private_network" >
     	<input into="IP_address">
    		<datastore access="2">IP_addresses</datastore>
     	</input>
    </network>

		<build type="cleanup">
			<input into="root_password">
				<generator type="strong_password_generator"/>
			</input>
		</build>
	</system>

</scenario>
